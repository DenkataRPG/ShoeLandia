@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Mvc.TagHelpers
@using ShoeLandia.Data.Models
@model ShoeLandia.ViewModels.Item.SingleItemViewModel
@inject SignInManager<ShoeLandia.Data.Models.ApplicationUser> SignInManager

@{
    ViewData["Title"] = Model.Name;
}

<div class="container product-container py-5">
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="/">Home</a></li>
            <li class="breadcrumb-item"><a href="/Item/All">Products</a></li>
            <li class="breadcrumb-item"><a href="/Item/Category/@Model.CategoryName">@Model.CategoryName</a></li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Name</li>
        </ol>
    </nav>

    <div class="row align-items-center mb-4">
        <div class="col-md-8">
            <h1 class="product-title">@Model.Name</h1>
            <span class="category-tag">@Model.CategoryName</span>
        </div>
        <div class="col-md-4 text-md-end">
            <div class="price-container">
                <span class="current-price">$@Model.Price</span>
                <span class="old-price">$@($"{Model.Price * 1.2:f2}")</span>
                <span class="discount-badge">20% OFF</span>
            </div>
        </div>
    </div>

    <div class="row g-4">
        <div class="col-lg-6">
            <div class="product-gallery">
                <div id="productCarousel" class="carousel slide carousel-fade" data-bs-ride="carousel">
                    <div class="carousel-inner rounded shadow">
                        @for (int i = 0; i < Model.Images.Count(); i++)
                        {
                            var activeClass = i == 0 ? "active" : "";
                            <div class="carousel-item @activeClass">
                                <img src="@Model.Images[i]" class="d-block w-100" alt="@Model.Name">
                            </div>
                        }
                    </div>
                    <button class="carousel-control-prev" type="button" data-bs-target="#productCarousel" data-bs-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Previous</span>
                    </button>
                    <button class="carousel-control-next" type="button" data-bs-target="#productCarousel" data-bs-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="visually-hidden">Next</span>
                    </button>
                </div>
                
                <div class="d-flex mt-3 justify-content-center thumbnail-gallery">
                    @for (int i = 0; i < Model.Images.Count(); i++)
                    {
                        <div class="thumbnail-item @(i == 0 ? "active" : "")" onclick="goToSlide(@i)">
                            <img src="@Model.Images[i]" class="img-thumbnail" alt="Thumbnail @(i+1)">
                        </div>
                    }
                </div>
            </div>
        </div>

        <div class="col-lg-6">
            <div class="product-details-card">
                <div class="product-detail">
                    <div class="detail-title"><i class="fas fa-shoe-prints"></i> Size:</div>
                    <div class="detail-content">@Model.Size</div>
                </div>
                <div class="product-detail">
                    <div class="detail-title"><i class="fas fa-palette"></i> Color:</div>
                    <div class="detail-content">
                        @foreach (var color in Model.Colors.ToString().Split(','))
                        {
                            <span class="color-swatch" style="background-color: @color.Trim().ToLower();" title="@color.Trim()"></span>
                        }
                    </div>
                </div>
                <div class="product-detail">
                    <div class="detail-title"><i class="fas fa-info-circle"></i> Description:</div>
                    <div class="detail-content description">@Model.Description</div>
                </div>
                
                <div class="mt-4">
                    <button class="btn-add-to-cart">
                        <i class="fas fa-cart-plus"></i> Add to Cart
                    </button>
                    
                    @if (SignInManager.IsSignedIn(User) && User.IsInRole("Admin"))
                    {
                        <div class="admin-actions mt-3">
                            <button class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#deleteModal">
                                <i class="fas fa-trash"></i> Delete
                            </button>
                            <a type="button" class="btn btn-warning" asp-controller="Item" asp-action="Edit" asp-route-id="@Model.Id">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="deleteModalLabel">Confirm Deletion</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                Are you sure you want to delete this product "<strong>@Model.Name</strong>"?
            </div>
            <div class="modal-footer">
                <form method="post" asp-controller="Item" asp-action="Delete" asp-route-id="@Model.Id">
                    <button type="submit" class="btn btn-danger">Yes, Delete</button>
                </form>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>

<style>
    .product-container {
        max-width: 1200px;
        margin: 0 auto;
    }
    
    .product-title {
        font-size: 2.2rem;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }
    
    .category-tag {
        display: inline-block;
        background-color: #f8f9fa;
        color: #6c757d;
        padding: 0.3rem 1rem;
        border-radius: 50px;
        font-size: 0.9rem;
        font-weight: 500;
    }
    
    .price-container {
        display: flex;
        flex-direction: column;
        align-items: flex-end;
        position: relative;
    }
    
    .current-price {
        font-size: 1.8rem;
        font-weight: 700;
        color: #212529;
    }
    
    .old-price {
        text-decoration: line-through;
        color: #6c757d;
        font-size: 1.2rem;
    }
    
    .discount-badge {
        position: absolute;
        top: -10px;
        right: -20px;
        background-color: #dc3545;
        color: white;
        padding: 0.25rem 0.75rem;
        border-radius: 50px;
        font-size: 0.8rem;
        font-weight: 600;
    }
    
    .product-gallery {
        position: relative;
    }
    
    .carousel-inner {
        border-radius: 10px;
        overflow: hidden;
    }
    
    .carousel-item img {
        height: 400px;
        object-fit: cover;
    }
    
    .thumbnail-gallery {
        gap: 10px;
    }
    
    .thumbnail-item {
        width: 70px;
        height: 70px;
        cursor: pointer;
        border: 2px solid transparent;
        border-radius: 5px;
        overflow: hidden;
        transition: all 0.2s ease;
    }
    
    .thumbnail-item.active {
        border-color: #0d6efd;
    }
    
    .thumbnail-item img {
        width: 100%;
        height: 100%;
        object-fit: cover;
    }
    
    .product-details-card {
        background-color: #f8f9fa;
        border-radius: 10px;
        padding: 2rem;
        height: 100%;
        box-shadow: 0 5px 15px rgba(0,0,0,0.05);
    }
    
    .product-detail {
        margin-bottom: 1.5rem;
        border-bottom: 1px solid #dee2e6;
        padding-bottom: 1.5rem;
    }
    
    .product-detail:last-child {
        border-bottom: none;
    }
    
    .detail-title {
        font-weight: 600;
        margin-bottom: 0.5rem;
        color: #495057;
        font-size: 1.1rem;
    }
    
    .detail-title i {
        margin-right: 0.5rem;
        color: #0d6efd;
    }
    
    .detail-content {
        font-size: 1rem;
        line-height: 1.5;
    }
    
    .description {
        max-height: 150px;
        overflow-y: auto;
    }
    
    .color-swatch {
        display: inline-block;
        width: 25px;
        height: 25px;
        border-radius: 50%;
        margin-right: 5px;
        border: 1px solid #dee2e6;
    }
    
    .btn-add-to-cart {
        background-color: #0d6efd;
        color: white;
        border: none;
        padding: 0.75rem 2rem;
        font-size: 1.1rem;
        border-radius: 50px;
        width: 100%;
        font-weight: 600;
        transition: all 0.2s ease;
        cursor: pointer;
    }
    
    .btn-add-to-cart:hover {
        background-color: #0b5ed7;
        transform: translateY(-2px);
        box-shadow: 0 5px 15px rgba(13, 110, 253, 0.3);
    }
    
    .admin-actions {
        display: flex;
        gap: 10px;
    }
    
    media (max-width: 992px) {
        .product-details-card {
            margin-top: 2rem;
        }
    }
</style>

<script>
    function goToSlide(index) {
        const carousel = document.getElementById('productCarousel');
        const carouselInstance = new bootstrap.Carousel(carousel);
        carouselInstance.to(index);
        
        // Update active thumbnail
        document.querySelectorAll('.thumbnail-item').forEach(item => {
            item.classList.remove('active');
        });
        document.querySelectorAll('.thumbnail-item')[index].classList.add('active');
    }
</script>